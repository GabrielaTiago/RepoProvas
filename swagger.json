{
    "openapi": "3.0.8",
    "info": {
        "tittle": "API RepoProvas",
        "description": "The purpose of this API is to share exams. In its content, it is possible to store the url with the pdf of the test, the teacher's name, which category it belongs to and the period it is linked to.",
        "contact": {
            "emial": "gabrielatiagodearaujo@outlook.com"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost:4000",
            "description": "Local tests API"
        },
        {
            "url": "https://repoprovas-api-backend.herokuapp.com",
            "description": "Production API"
        }
    ],
    "paths": {
        "/": {
            "post": {
                "tags": [
                    "auth"
                ],
                "summary": "Login",
                "description": "This route is responsible for login into the app",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            },
                            "examples": {
                                "visitor": {
                                    "value": {
                                        "email": "newUser@domain.com",
                                        "password": "Password@123"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            }
        },
        "/sign-up": {
            "post": {
                "tags": [
                    "auth"
                ],
                "summary": "Account creation",
                "description": "This route is responsible for registering a new user",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NewUser"
                            },
                            "examples": {
                                "user": {
                                    "value": {
                                        "email": "newUser@domain.com",
                                        "password": "Password@123",
                                        "passwordConfirmation": "Password@123"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "$ref": "#/components/schemas/NewUser"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden', Incorrect email and/or password"
                    },
                    "409": {
                        "description": "Conflict This e-mail has already been registered"
                    },
                    "422": {
                        "description": "Unprocessable entity, The passwords do not match"
                    },
                    "5XX": {
                        "description": "Unexpected error"
                    }
                }
            }
        },
        "/tests": {
            "post": {
                "summary": "Register tests",
                "description": "This route will be responsible for registering a new test",
                "tags": [
                    "Tests"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "$ref": "#/components/schemas/Test"
                                },
                                "exemples": {
                                    "product": {
                                        "value": {
                                            "name": "Prova de C1",
                                            "pdfUrl": "https://mat.unb.br/grad/aulas/cadernos/calculo1/provas/modulo1/cal1p1_203.pdf",
                                            "categoryId": 1,
                                            "disciplineId": 1,
                                            "teacherId": 1
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "$ref": "#/components/schemas/Test"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized: Missing authorization header | Token not found | Invalid token | "
                    },
                    "404": {
                        "description": "Not found: This [category, discipline, teacher] doesn't exits"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "5XX": {
                        "description": "Unexpected error"
                    }
                }
            }
        },
        "/tests/discipline": {
            "get": {
                "summary": "Filters tests by discipline",
                "description": "This route will be responsible for find tests filtering by discipline",
                "tags": [
                    "Tests"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "discipline",
                        "in": "query",
                        "description": "Filters tests by disciplines"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "401": {
                        "description": "Unauthorized: Missing authorization header | Token not found | Invalid token | "
                    },
                    "5XX": {
                        "description": "Unexpected error"
                    }
                }
            }
        },
        "/tests/teacher": {
            "get": {
                "summary": "Filters tests by teacher",
                "description": "This route will be responsible for find tests filtering by teacher",
                "tags": [
                    "Tests"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "teacher",
                        "in": "query",
                        "description": "Filters tests by teacher"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "401": {
                        "description": "Unauthorized: Missing authorization header | Token not found | Invalid token | "
                    },
                    "5XX": {
                        "description": "Unexpected error"
                    }
                }
            }
        },
        "components": {
            "schemas": {
                "User": {
                    "type": "object",
                    "properties": {
                        "id": {
                            "type": "string"
                        },
                        "email": {
                            "type": "string"
                        },
                        "password": {
                            "type": "string"
                        }
                    }
                },
                "NewUser": {
                    "type": "object",
                    "properties": {
                        "email": {
                            "type": "string"
                        },
                        "password": {
                            "type": "string",
                            "description": "8 to 20 characters. Must include uppercase and lowercase letters, a number and a special character"
                        },
                        "confirmPassword": {
                            "type": "string",
                            "description": "Same as password"
                        }
                    }
                },
                "Test": {
                    "type": "object",
                    "properties": {
                        "name": {
                            "type": "string"
                        },
                        "pdfUrl": {
                            "type": "string"
                        },
                        "categoryId": {
                            "type": "number"
                        },
                        "disciplineId": {
                            "type": "number"
                        },
                        "teacherId": {
                            "type": "number"
                        }
                    }
                }
            }
        },
        "securitySchemas": {
            "bearerAuth": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormart": "JWT"
            }
        }
    }
}